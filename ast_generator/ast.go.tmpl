// Code generated by go generate; DO NOT EDIT.
package main

import "github.com/kr/pretty"

// It seems odd to use this pattern in go, especially given this comment:
// https://groups.google.com/g/golang-nuts/c/3fOIZ1VLn1o/m/GeE1z5qUA6YJ
// I'm gonna keep using it though so as to not diverge from the book too far.

type Visitor interface {
	{{- range .Structs }}
	visit{{.Name}}({{.Name}}) error
	{{- end}}
}

type {{ .Basename }} interface{
    is{{.Basename}}()
	Accept(Visitor) error
    String() string
}

{{ range .Structs }}
type {{ .Name }} struct {
    {{- range .Fields }}
        {{ .Name }} {{ .Type}}
    {{- end }}
}

func ({{slice .Name 0 1 | ToLower}} {{.Name}}) Accept(v Visitor) error {
	return v.visit{{.Name}}({{slice .Name 0 1 | ToLower}})
}
func ({{slice .Name 0 1 | ToLower}} {{.Name}}) String() string {
    return pretty.Sprint({{slice .Name 0 1 | ToLower}})
}
{{end}}

{{- range .Structs }}
func ({{slice .Name 0 1 | ToLower}} {{.Name}}) is{{$.Basename}}() {}
{{- end }}

